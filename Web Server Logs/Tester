/**
 * Week 3 Web Server Logs: From Logs to Visits
 * Assignments (In the Tester class)
 * Course: Java Programming: Arrays, Lists, and Structured Data
 * Specialization: Java Programming and Software Engineering Fundamentals Specialization
 * Duke University
 * @author Elena Garmash 
 * @version 1.0
 */
 import java.util.*;

public class Tester
{
    public void testLogEntry() {
        LogEntry le = new LogEntry("1.2.3.4", new Date(), "example request", 200, 500);
        System.out.println(le);
        LogEntry le2 = new LogEntry("1.2.100.4", new Date(), "example request 2", 300, 400);
        System.out.println(le2);
    }
    
    public void testLogAnalyzer() {
        LogAnalyzer a = new LogAnalyzer();
        a.readFile("weblog1_log");
        a.printAll();
    }
    
    public void testUniqIP() {
       LogAnalyzer la = new LogAnalyzer();
       la.readFile("weblog1_log");
       int uniqueIPs = la.countUniqueIPs();
       System.out.println("There are " + uniqueIPs + " IPs");
    }
    
    public void testPrintAllHigherThanNum() {
         LogAnalyzer la = new LogAnalyzer();
         la.readFile("weblog1_log");
         la.printAllHigherThanNum(400);
    }
    
    public void testUniqueIPVisitsOnDay() {
        LogAnalyzer x = new LogAnalyzer();
        x.readFile("weblog1_log");
        ArrayList<String> UniqueIPVisitsOnDay = x.uniqueIPVisitsOnDay("Mar 17");
        System.out.println("Mar 17 " + UniqueIPVisitsOnDay);
        System.out.println(UniqueIPVisitsOnDay.size());
    }
    
    public void countUniqueIPsInRange() {
       LogAnalyzer la = new LogAnalyzer();
       la.readFile("weblog1_log");
       int uniqueIPsInRange = la.countUniqueIPsInRange(200,299);
       System.out.println("There are " + uniqueIPsInRange + " IPs in range");
    }
    
    public void testCountVisitsPerIP(){
       LogAnalyzer y = new LogAnalyzer();
       //y.readFile("weblog1_log");
       y.readFile("short-test_log");
       HashMap<String, Integer> m = y.countVisitsPerIP(); 
       System.out.println(m);
       //for (String s : m.keySet()) 
       //     System.out.println(s + " " + m.get(s));
    } 
    
    public void testMostNumberVisitsByIP(){
     LogAnalyzer la = new LogAnalyzer();
       la.readFile("weblog1_log");
       HashMap<String, Integer> qa = la.countVisitsPerIP(); 
       int MostNumberVisitsByIP = la.mostNumberVisitsByIP(qa);
       System.out.println("Most Number Visits By IP is " + MostNumberVisitsByIP);
    }
    
    public void testIPsMostVisits() {
        LogAnalyzer xy = new LogAnalyzer();
        xy.readFile("weblog1_log");
        HashMap<String, Integer> qq = xy.countVisitsPerIP();
        ArrayList<String> iPsMostVisits = xy.iPsMostVisits(qq);
        int MostNumberVisitsByIP = xy.mostNumberVisitsByIP(qq);
        System.out.println("IP addresses that all have the maximum number of visits to this website " + MostNumberVisitsByIP + " :");
        System.out.println(iPsMostVisits);
    }
    
    public void testIPsForDays(){
       LogAnalyzer y = new LogAnalyzer();
       //y.readFile("weblog1_log");
       y.readFile("weblog1_log");
       HashMap<String, ArrayList<String>> m = y.iPsForDays(); 
       System.out.println(m.size());
        for (String s : m.keySet()) 
          System.out.println(s + " " + m.get(s));
    }
    
    public void testDayWithMostIPVisits(){
       LogAnalyzer z = new LogAnalyzer();
       z.readFile("weblog1_log");
       HashMap<String, ArrayList<String>> m = z.iPsForDays();
       String mostVisits = z.dayWithMostIPVisits(m);
       System.out.println(m.size());
       System.out.println("The day most visited " + mostVisits);
    }
    
    public void testIPsWithMostVisitsOnDay(){
        LogAnalyzer xa = new LogAnalyzer();
        xa.readFile("weblog1_log");
        HashMap<String, ArrayList<String>> map2 = xa.iPsForDays();
        ArrayList<String> IPsWithMostVisitsOnDay = xa.iPsWithMostVisitsOnDay(map2, "Mar 17");
        System.out.println("Mar 17 " + IPsWithMostVisitsOnDay);
        System.out.println(IPsWithMostVisitsOnDay.size());
    }
