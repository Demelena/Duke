/**
 * Week 1 Earthquakes: Programming and Interfaces
 * Filtering Data: Assignment 1: Implementing Filters
 * Course: Java Programming: Principles of Software Design
 * Specialization: Java Programming and Software Engineering Fundamentals Specialization
 * Duke University
 * @author Elena Garmash 
 * @version 1.0
 */
import java.util.*;
import edu.duke.*;

public class EarthQuakeClient2 {
    public EarthQuakeClient2() {
        // TODO Auto-generated constructor stub
    }

    public ArrayList<QuakeEntry> filter(ArrayList<QuakeEntry> quakeData, Filter f) { 
        ArrayList<QuakeEntry> answer = new ArrayList<QuakeEntry>();
        for(QuakeEntry qe : quakeData) { 
            if (f.satisfies(qe)) { 
                answer.add(qe); 
            } 
        } 
        
        return answer;
    } 

    public void quakesWithFilter() { 
        EarthQuakeParser parser = new EarthQuakeParser(); 
        //String source = "http://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_week.atom";
        //String source = "data/nov20quakedatasmall.atom";
        String source = "data/nov20quakedata.atom";
        ArrayList<QuakeEntry> list  = parser.read(source);         
        System.out.println("read data for "+list.size()+" quakes");
        
        Location Denver  = new Location(39.7392, -104.9903);
        
        Filter f = new DistanceFilter(Denver,  1000000.0); 
        ArrayList<QuakeEntry> m7  = filter(list, f); 
        Filter f5 = new PhraseFilter("end", "a");
        ArrayList<QuakeEntry> m5  = filter(m7, f5);
        System.out.println(m5.size());
        
        //Filter f = new MagnitudeFilter(3.5, 4.5); 
        //ArrayList<QuakeEntry> m7  = filter(list, f); 
        //Filter f5 = new DepthFilter(-55000.0, -20000.0);
        //ArrayList<QuakeEntry> m5  = filter(m7, f5);
        //System.out.println(m5.size());

        //Filter f = new MagnitudeFilter(4.0, 5.0); 
        //ArrayList<QuakeEntry> m7  = filter(list, f); 
        //Filter f5 = new DepthFilter(-35000.0, -12000.0);
        //ArrayList<QuakeEntry> m5  = filter(m7, f5);
        //System.out.println(m5.size());
        
        //Location Japan  = new Location(35.42, 139.43);
        
        //Filter f = new DistanceFilter(Japan,  10000000.0); 
        //ArrayList<QuakeEntry> m7  = filter(list, f); 
        //Filter f5 = new PhraseFilter("end", "Japan");
        //ArrayList<QuakeEntry> m5  = filter(m7, f5);
        
        //Location Tokyo  = new Location(35.42, 139.43);
        
        //Filter f = new DistanceFilter(Tokyo,  10000000.0); 
        //ArrayList<QuakeEntry> m7  = filter(list, f); 
        //Filter f5 = new PhraseFilter("end", "Japan");
        //ArrayList<QuakeEntry> m5  = filter(m7, f5);
        
        //for (QuakeEntry qe: m5) { 
            //System.out.println(qe);
        //} 
    }

    public void createCSV() {
        EarthQuakeParser parser = new EarthQuakeParser();
        //String source = "../data/nov20quakedata.atom";
        String source = "data/nov20quakedatasmall.atom";
        //String source = "http://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_week.atom";
        ArrayList<QuakeEntry> list  = parser.read(source);
        dumpCSV(list);
        System.out.println("# quakes read: "+list.size());
    }

    public void dumpCSV(ArrayList<QuakeEntry> list) {
        System.out.println("Latitude,Longitude,Magnitude,Info");
        for(QuakeEntry qe : list){
            System.out.printf("%4.2f,%4.2f,%4.2f,%s\n",
                qe.getLocation().getLatitude(),
                qe.getLocation().getLongitude(),
                qe.getMagnitude(),
                qe.getInfo());
        }
    }
    
    //Assignment 2: MatchAllFilter and Modification to the Interface
    
    //Write a new void method named testMatchAllFilter in the EarthQuakeClient2 class. 
    //This method reads in earthquake data from a source and stores them into an 
    //ArrayList of type QuakeEntry. Then it prints all the earthquakes and how many 
    //earthquakes that were from the source. 
    public void testMatchAllFilter(){
        EarthQuakeParser parser = new EarthQuakeParser(); 
        //String source = "http://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_week.atom";
        //String source = "data/nov20quakedatasmall.atom";
        String source = "data/nov20quakedata.atom";
        ArrayList<QuakeEntry> list  = parser.read(source);         
        System.out.println("read data for "+list.size()+" quakes");
        MatchAllFilter maf = new MatchAllFilter();
        //maf.addFilter(new PhraseFilter("any", "a"));
        //maf.addFilter(new DepthFilter(-100000.0, -10000.0));
        //maf.addFilter(new MagnitudeFilter(0.0, 2.0));
        
        maf.addFilter(new PhraseFilter("any", "o"));
        maf.addFilter(new DepthFilter(-180000.0, -30000.0));
        maf.addFilter(new MagnitudeFilter(1.0, 4.0));
        
        ArrayList<QuakeEntry> m5  = filter(list, maf);
        System.out.println(m5.size());
        //for (QuakeEntry qe: m5) { 
            //System.out.println(qe);
        //} 
        
    }
    
    
    //Write a new void method named testMatchAllFilter2 in the EarthQuakeClient2 class. 
    //This method should be identical to the method testMatchAllFilter, but will create 
    //different Filters. You should read in earthquakes from the small file nov20quakedatasmall.atom.
    //Then create a MatchAllFilter named maf, and use the addFilter method to add three Filters 
    //to test the magnitude between 0.0 and 3.0, to test for the distance from Tulsa, Oklahoma 
    //at location (36.1314, -95.9372) is less than 10000000 meters (10000 km), and if the 
    //substring “Ca” is in the title. Then use filter(list, maf) to use all three filters and 
    //print out the resulting list of earthquakes. You will see the 7 earthquakes meet that criteria.
    public void testMatchAllFilter2(){
        EarthQuakeParser parser = new EarthQuakeParser(); 
        //String source = "http://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_week.atom";
        //String source = "data/nov20quakedatasmall.atom";
        String source = "data/nov20quakedata.atom";
        ArrayList<QuakeEntry> list  = parser.read(source);         
        System.out.println("read data for "+list.size()+" quakes");
        MatchAllFilter maf = new MatchAllFilter();
        //maf.addFilter(new PhraseFilter("any", "Ca"));
        //Location Tulsa  = new Location(36.1314, -95.9372);
        //maf.addFilter(new DistanceFilter(Tulsa,  10000000.0));
        //maf.addFilter(new MagnitudeFilter(0.0, 3.0));
        maf.addFilter(new PhraseFilter("any", "e"));
        Location Billund  = new Location(55.7308, 9.1153);
        maf.addFilter(new DistanceFilter(Billund,  3000000.0));
        maf.addFilter(new MagnitudeFilter(0.0, 5.0));
        
        ArrayList<QuakeEntry> m5  = filter(list, maf);
        
        for (QuakeEntry qe: m5) { 
            System.out.println(qe);
        } 
        System.out.println(m5.size());
        System.out.println("Filters used are: " + maf.getName());
     }
    }
