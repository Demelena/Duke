/**
 * Object Oriented Caesar Cipher
 * Assignment 2: Two Keys
 * Course: Java Programming: Arrays, Lists, and Structured Data
 * Specialization: Java Programming and Software Engineering Fundamentals Specialization
 * Duke University
 * @author Elena Garmash 
 * @version 1.0
 */
 import edu.duke.*;

public class CaesarCipherTwo {
    private String alphabet;
    private String shiftedAlphabet1;
    private String shiftedAlphabet2;
    private int mainKey1;
    private int mainKey2;
    public CaesarCipherTwo(int key1, int key2) {
       mainKey1 = key1;
       mainKey2 = key2;
       alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
       shiftedAlphabet1 = alphabet.substring(key1)+
       alphabet.substring(0,key1);
       shiftedAlphabet2 = alphabet.substring(key2)+
       alphabet.substring(0,key2);
       } 
       
    public String encrypt(String input){
       StringBuilder encrypted = new StringBuilder(input);
       //Count from 0 to < length of encrypted, (call it i)
        for(int i = 0; i < encrypted.length(); i++) {
            //Look at the ith character of encrypted (call it currChar)
            char currChar = encrypted.charAt(i);
            boolean a = Character.isLowerCase(currChar);
            if (a) {
                currChar = Character.toUpperCase(currChar);
            }
            //Find the index of currChar in the alphabet (call it idx)
            int idx = alphabet.indexOf(currChar);
            //If currChar is in the alphabet
            if(idx != -1){
                //Get the idxth character of shiftedAlphabet (newChar)
                char newChar;
                if (i % 2 == 0)
                    newChar = shiftedAlphabet1.charAt(idx);
                else
                    newChar = shiftedAlphabet2.charAt(idx);
                //Replace the ith character of encrypted with newChar
                if (a) {
                    newChar = Character.toLowerCase(newChar);
                }
                encrypted.setCharAt(i, newChar);
            }
        }            
        //Your answer is the String inside of encrypted
        return encrypted.toString();
       }
    
    public String decrypt(String input) {
            CaesarCipherTwo e = new CaesarCipherTwo(26-mainKey1, 26-mainKey2);
            String a = e.encrypt(input);    
            System.out.println(input);
            System.out.println(a);
            return a;
        }   
}
