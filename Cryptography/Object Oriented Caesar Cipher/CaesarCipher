/**
 * Object Oriented Caesar Cipher
 * Assignment 1: One Key
 * Course: Java Programming: Arrays, Lists, and Structured Data
 * Specialization: Java Programming and Software Engineering Fundamentals Specialization
 * Duke University
 * @author Elena Garmash 
  * @version 1.0
 */
 import edu.duke.*;

public class CaesarCipher {
    private String alphabet;
    private String shiftedAlphabet;
    private int mainKey;
    
    public CaesarCipher(int key) {
       mainKey = key;
       alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
       shiftedAlphabet = alphabet.substring(key)+
       alphabet.substring(0,key);
       } 
    
       public String encrypt(String input) {
        //Make a StringBuilder with message (encrypted)
        StringBuilder encrypted = new StringBuilder(input);
        //Count from 0 to < length of encrypted, (call it i)
        for(int i = 0; i < encrypted.length(); i++) {
            //Look at the ith character of encrypted (call it currChar)
            char currChar = encrypted.charAt(i);
            boolean a = Character.isLowerCase(currChar);
            if (a) {
                currChar = Character.toUpperCase(currChar);
            }
            //Find the index of currChar in the alphabet (call it idx)
            int idx = alphabet.indexOf(currChar);
            //If currChar is in the alphabet
            if(idx != -1){
                //Get the idxth character of shiftedAlphabet (newChar)
                char newChar = shiftedAlphabet.charAt(idx);
                //Replace the ith character of encrypted with newChar
                if (a) {
                    newChar = Character.toLowerCase(newChar);
                }
                encrypted.setCharAt(i, newChar);
            }
        }            
        //Your answer is the String inside of encrypted
        return encrypted.toString();
    }

    public String decrypt(String input) {
        CaesarCipher cc = new CaesarCipher(26-mainKey);
        String message = cc.encrypt(input);        
        return message;
     }
}
