/**
 * Implementing the Caesar Cipher
 * Assignment 2: Caesar Cipher
 * Course: Java Programming: Arrays, Lists, and Structured Data
 * Specialization: Java Programming and Software Engineering Fundamentals Specialization
 * Duke University
 * @author Elena Garmash 
 * @version 1.0
 */
 import edu.duke.*;
public class CaesarCipher {
    public String encrypt(String input, int key) {
        //Make a StringBuilder with message (encrypted)
        StringBuilder encrypted = new StringBuilder(input);
        //Write down the alphabet
        String alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        //Compute the shifted alphabet
        String shiftedAlphabet = alphabet.substring(key)+
        alphabet.substring(0,key);
        //Count from 0 to < length of encrypted, (call it i)
        for(int i = 0; i < encrypted.length(); i++) {
            //Look at the ith character of encrypted (call it currChar)
            char currChar = encrypted.charAt(i);
            boolean a = Character.isLowerCase(currChar);
            if (a) {
                currChar = Character.toUpperCase(currChar);
            }
            //Find the index of currChar in the alphabet (call it idx)
            int idx = alphabet.indexOf(currChar);
            //If currChar is in the alphabet
            if(idx != -1){
                //Get the idxth character of shiftedAlphabet (newChar)
                char newChar = shiftedAlphabet.charAt(idx);
                //Replace the ith character of encrypted with newChar
                if (a) {
                    newChar = Character.toLowerCase(newChar);
                }
                encrypted.setCharAt(i, newChar);
            }
        }            
        //Your answer is the String inside of encrypted
        return encrypted.toString();
    }
    
    public String encryptTwoKeys(String input, int key1, int key2) {
        StringBuilder encrypted = new StringBuilder(input);
        //Write down the alphabet
        String alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        //Compute the shifted alphabet
        String shiftedAlphabet1 = alphabet.substring(key1)+alphabet.substring(0,key1);
        String shiftedAlphabet2 = alphabet.substring(key2)+alphabet.substring(0,key2);
        //Count from 0 to < length of encrypted, (call it i)
        for(int i = 0; i < encrypted.length(); i++) {
            //Look at the ith character of encrypted (call it currChar)
            char currChar = encrypted.charAt(i);
            boolean a = Character.isLowerCase(currChar);
            if (a) {
                currChar = Character.toUpperCase(currChar);
            }
            //Find the index of currChar in the alphabet (call it idx)
            int idx = alphabet.indexOf(currChar);
            //If currChar is in the alphabet
            if(idx != -1){
                //Get the idxth character of shiftedAlphabet (newChar)
                char newChar;
                if (i % 2 == 0)
                    newChar = shiftedAlphabet1.charAt(idx);
                else
                    newChar = shiftedAlphabet2.charAt(idx);
                //Replace the ith character of encrypted with newChar
                if (a) {
                    newChar = Character.toLowerCase(newChar);
                }
                encrypted.setCharAt(i, newChar);
            }
        }            
        //Your answer is the String inside of encrypted
        return encrypted.toString();
    }
   
    public void testCaesar() {
        int key = 17;
        //FileResource fr = new FileResource();
        //String message = fr.asString();
        //String encrypted = encrypt(message, key);
        //System.out.println("key is " + key + "\n" + encrypted);
        //String decrypted = encrypt(encrypted, 26-key);
        //System.out.println(decrypted);
        
        //Assignment 2: Caesar Cipher
        String q = encrypt("At noon be in the conference room with your hat on for a surprise party. YELL LOUD!", 15);
        System.out.println("key is " + 15 + "\n" + q);
        String qa = encrypt("First Legion", 17);
        System.out.println("key is " + key + "\n" + qa);
        String qz = encryptTwoKeys("At noon be in the conference room with your hat on for a surprise party. YELL LOUD!", 8, 21);
        System.out.println("keys are " + "8,21" + "\n" + qz);
        String qz8 = encryptTwoKeys("Top ncmy qkff vi vguv vbg ycpx", 24, 6);
        System.out.println("keys are " + "2,20" + "\n" + qz8);
        String qz9 = encryptTwoKeys("Akag tjw Xibhr awoa aoee xakex znxag xwko", 22, 6);
        System.out.println("keys are " + "2,20" + "\n" + qz8);
    }
    
    //Cryptography Quiz, 14 questions
    
    public void testCaesarQuiz() {
        String q = encrypt("Can you imagine life WITHOUT the internet AND computers in your pocket?", 15);
        System.out.println("key is " + 15 + "\n" + q);
        String qz = encryptTwoKeys("Can you imagine life WITHOUT the internet AND computers in your pocket?", 21, 8);
        System.out.println("keys are " + "21,8" + "\n" + qz);
    }
}
